{"version":3,"sources":["util.js","assets/icons/loader.svg","components/Loader/Loader.js","App.js","index.js"],"names":["API_URL","API_KEY","Loader","className","src","loadingIcon","id","alt","count","App","state","photos","getPhotos","axios","get","then","response","setState","data","addPhotos","console","log","photosArray","forEach","photo","push","catch","error","this","dataLength","length","next","hasMore","loader","map","image","href","links","html","urls","regular","alt_description","title","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAAaA,EAAU,0CACVC,EAAU,8CCDR,MAA0B,mC,eCY1BC,MARf,WACE,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKC,IAAKC,EAAaC,GAAG,SAASC,IAAI,e,QCCzCC,EAAQ,EAESC,E,4MACnBC,MAAQ,CACNC,OAAQ,I,EAcVC,UAAY,WACVC,IACGC,IADH,UACUd,EADV,kBAC2BQ,EAD3B,sBAC8CP,IAC3Cc,MAAK,SAACC,GACL,EAAKC,SAAS,CACZN,OAAQK,EAASE,W,EAKzBC,UAAY,WACVN,IACGC,IADH,UACUd,EADV,kBAC2BQ,EAD3B,sBAC8CP,IAC3Cc,MAAK,SAACC,GACLI,QAAQC,IAAIL,GACZ,IAAMM,EAAc,EAAKZ,MAAMC,OACTK,EAASE,KACjBK,SAAQ,SAACC,GACrBF,EAAYG,KAAKD,MAEnBJ,QAAQC,IAAIC,GAEZ,EAAKL,SAAS,CACZN,OAAQW,OAGXI,OAAM,SAACC,GAAD,OAAWP,QAAQC,IAAIM,O,uDArClC,WAAqB,IAAD,OAClBd,IACGC,IADH,UACUd,EADV,kBAC2BQ,EAD3B,sBAC8CP,IAC3Cc,MAAK,SAACC,GACLR,EAAQ,GACR,EAAKS,SAAS,CACZN,OAAQK,EAASE,Y,oBA6CzB,WACE,IAAQP,EAAWiB,KAAKlB,MAAhBC,OACR,OACE,sBAAKR,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,6BAEA,cAAC,IAAD,CACE0B,WAAYlB,EAAOmB,OACnBC,KAAMH,KAAKT,UACXa,SAAS,EACTC,OAAQ,cAAC,EAAD,IACR9B,UAAU,kBALZ,SAMGQ,EAAOuB,KAAI,SAACC,GAAD,OACV,mBAAGC,KAAMD,EAAME,MAAMC,KAArB,SACE,qBACElC,IAAK+B,EAAMI,KAAKC,QAChBjC,IAAK4B,EAAMM,gBACXC,MAAOP,EAAMM,mBAJeN,EAAM7B,gB,GArEjBqC,aCNjCC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.39ac91ca.chunk.js","sourcesContent":["export const API_URL = \"https://api.unsplash.com/photos/random/\";\r\nexport const API_KEY = \"sDb0GZy9XSvsikGWxrZQPqygwXiJaUX9eGc6HIdcOFc\";\r\nexport const count = 10;\r\n","export default __webpack_public_path__ + \"static/media/loader.44f6df9c.svg\";","import React from \"react\";\r\nimport loadingIcon from \"../../assets/icons/loader.svg\";\r\nimport \"./Loader.scss\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className='loader'>\r\n      <img src={loadingIcon} id='loader' alt='loading' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\n// import Loader from \"./assets/icons/loader.svg\";\nimport \"./App.scss\";\nimport axios from \"axios\";\nimport { API_URL, API_KEY } from \"./util\";\nimport Loader from \"./components/Loader/Loader\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nlet count = 5;\n\nexport default class App extends Component {\n  state = {\n    photos: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}?count=${count}&client_id=${API_KEY}`)\n      .then((response) => {\n        count = 15;\n        this.setState({\n          photos: response.data,\n        });\n      });\n  }\n\n  getPhotos = () => {\n    axios\n      .get(`${API_URL}?count=${count}&client_id=${API_KEY}`)\n      .then((response) => {\n        this.setState({\n          photos: response.data,\n        });\n      });\n  };\n\n  addPhotos = () => {\n    axios\n      .get(`${API_URL}?count=${count}&client_id=${API_KEY}`)\n      .then((response) => {\n        console.log(response);\n        const photosArray = this.state.photos;\n        const fetchedPhotos = response.data;\n        fetchedPhotos.forEach((photo) => {\n          photosArray.push(photo);\n        });\n        console.log(photosArray);\n        // photosArray.push(response.data);\n        this.setState({\n          photos: photosArray,\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  // windowScrollHandler = () => {\n  //   window.addEventListener(\"scroll\", () => {\n  //     if (\n  //       window.innerHeight + window.scrollY >=\n  //       document.body.offsetHeight - 1000\n  //     ) {\n  //       this.addPhotos();\n  //     }\n  //   });\n  // };\n\n  render() {\n    const { photos } = this.state;\n    return (\n      <div className='App'>\n        <h1 className='header'>INFINITE SCROLL</h1>\n\n        <InfiniteScroll\n          dataLength={photos.length}\n          next={this.addPhotos}\n          hasMore={true}\n          loader={<Loader />}\n          className='image-container'>\n          {photos.map((image) => (\n            <a href={image.links.html} key={image.id}>\n              <img\n                src={image.urls.regular}\n                alt={image.alt_description}\n                title={image.alt_description}\n              />\n            </a>\n          ))}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}